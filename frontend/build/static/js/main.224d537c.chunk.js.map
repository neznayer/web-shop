{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/Homescreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/profileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentMethodScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrdersListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_ADD_REVIEW_REQUEST","PRODUCT_ADD_REVIEW_SUCCESS","PRODUCT_ADD_REVIEW_FAIL","PRODUCT_ADD_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_SPAYMENT_METHOD","CART_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_BY_ADMIN_REQUEST","USER_UPDATE_BY_ADMIN_SUCCESS","USER_UPDATE_BY_ADMIN_FAIL","USER_UPDATE_BY_ADMIN_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_ALL_REQUEST","ORDER_LIST_ALL_SUCCESS","ORDER_LIST_ALL_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productAddReview","productTop","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdate","userList","users","userDelete","userUpdateByAdmin","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","myOrdersList","orders","ordersList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","country","city","address","postalCode","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","Container","Row","Col","className","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","LoaderSmall","Spinner","animation","role","width","height","margin","display","Loader","listProducts","pageNumber","listProductDetails","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","Homescreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","ListGroup","ListGroupItem","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","rows","addToCart","setItem","stringify","CartScreen","location","search","split","removeFromCartHandler","removeFromCart","lenght","rounded","ms","reduce","acc","cur","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","userOrders","myOrdersLoading","myOrdersError","put","updateUser","Table","stripped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","shippingDetails","setShippingDetails","handleChange","required","PaymentMethodScreen","setPaymentMethod","Check","label","PlaceOrderScreen","addTrailingZeros","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","errorDeliver","addPaypalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","parentNode","dataset","delete","striped","href","data-value","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUserByAdmin","checked","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","fields","productEditDetails","setProductEditDetails","uploading","setUploading","changeHandler","file","files","formData","FormData","append","valueToPut","console","log","updateProduct","Object","fieldName","upperFirst","lowerCase","undefined","File","OrdersListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.224d537c.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\nexport const PRODUCT_DELETE_REQUEST = \"PRODUCT_DELETE_REQUEST\";\nexport const PRODUCT_DELETE_SUCCESS = \"PRODUCT_DELETE_SUCCESS\";\nexport const PRODUCT_DELETE_FAIL = \"PRODUCT_DELETE_FAIL\";\nexport const PRODUCT_CREATE_REQUEST = \"PRODUCT_CREATE_REQUEST\";\nexport const PRODUCT_CREATE_SUCCESS = \"PRODUCT_CREATE_SUCCESS\";\nexport const PRODUCT_CREATE_FAIL = \"PRODUCT_CREATE_FAIL\";\nexport const PRODUCT_CREATE_RESET = \"PRODUCT_CREATE_RESET\";\nexport const PRODUCT_UPDATE_REQUEST = \"PRODUCT_UPDATE_REQUEST\";\nexport const PRODUCT_UPDATE_SUCCESS = \"PRODUCT_UPDATE_SUCCESS\";\nexport const PRODUCT_UPDATE_FAIL = \"PRODUCT_UPDATE_FAIL\";\nexport const PRODUCT_UPDATE_RESET = \"PRODUCT_UPDATE_RESET\";\nexport const PRODUCT_ADD_REVIEW_REQUEST = \"PRODUCT_ADD_REVIEW_REQUEST\";\nexport const PRODUCT_ADD_REVIEW_SUCCESS = \"PRODUCT_ADD_REVIEW_SUCCESS\";\nexport const PRODUCT_ADD_REVIEW_FAIL = \"PRODUCT_ADD_REVIEW_FAIL\";\nexport const PRODUCT_ADD_REVIEW_RESET = \"PRODUCT_ADD_REVIEW_RESET\";\nexport const PRODUCT_TOP_REQUEST = \"PRODUCT_TOP_REQUEST\";\nexport const PRODUCT_TOP_SUCCESS = \"PRODUCT_TOP_SUCCESS\";\nexport const PRODUCT_TOP_FAIL = \"PRODUCT_TOP_FAIL\";\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\nexport const CART_SAVE_SPAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\nexport const CART_RESET = \"CART_RESET\";\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\";\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\";\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\";\nexport const USER_DETAILS_RESET = \"USER_DETAILS_RESET\";\n\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";\nexport const USER_UPDATE_RESET = \"USER_UPDATE_RESET\";\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST\";\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS\";\nexport const USER_LIST_FAIL = \"USER_LIST_FAIL\";\nexport const USER_LIST_RESET = \"USER_LIST_RESET\";\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST\";\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\n\nexport const USER_UPDATE_BY_ADMIN_REQUEST = \"USER_UPDATE_BY_ADMIN_REQUEST\";\nexport const USER_UPDATE_BY_ADMIN_SUCCESS = \"USER_UPDATE_BY_ADMIN_SUCCESS\";\nexport const USER_UPDATE_BY_ADMIN_FAIL = \"USER_UPDATE_BY_ADMIN_FAIL\";\nexport const USER_UPDATE_BY_ADMIN_RESET = \"USER_UPDATE_BY_ADMIN_RESET\";\n","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\n\nexport const ORDER_LIST_MY_REQUEST = \"ORDER_LIST_MY_REQUEST\";\nexport const ORDER_LIST_MY_SUCCESS = \"ORDER_LIST_MY_SUCCESS\";\nexport const ORDER_LIST_MY_FAIL = \"ORDER_LIST_MY_FAIL\";\nexport const ORDER_LIST_MY_RESET = \"ORDER_LIST_MY_RESET\";\nexport const ORDER_LIST_ALL_REQUEST = \"ORDER_LIST_ALL_REQUEST\";\nexport const ORDER_LIST_ALL_SUCCESS = \"ORDER_LIST_ALL_SUCCESS\";\nexport const ORDER_LIST_ALL_FAIL = \"ORDER_LIST_ALL_FAIL\";\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n    productAddReviewReducer,\n    productCreateReducer,\n    productDeleteReducer,\n    productDetailsReducer,\n    productListReducer,\n    productTopReducer,\n    productUpdateReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\nimport {\n    userDeleteReducer,\n    userDetailsReducer,\n    userListReducer,\n    userLoginReducer,\n    userRegisterReducer,\n    userUpdateByAdminReducer,\n    userUpdateReducer,\n} from \"./reducers/userReducers\";\nimport {\n    myOrdersListReducer,\n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderDeliverReducer,\n    ordersListReducer,\n} from \"./reducers/orderReducers\";\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productAddReview: productAddReviewReducer,\n    productTop: productTopReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdate: userUpdateReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdateByAdmin: userUpdateByAdminReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderDeliver: orderDeliverReducer,\n    myOrdersList: myOrdersListReducer,\n    ordersList: ordersListReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n    ? JSON.parse(localStorage.getItem(\"cartItems\"))\n    : [];\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n    ? JSON.parse(localStorage.getItem(\"userInfo\"))\n    : null;\n\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\n    ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\n    : { country: \"\", city: \"\", address: \"\", postalCode: \"\" };\n\nconst initialState = {\n    cart: {\n        cartItems: cartItemsFromStorage,\n        shippingAddress: shippingAddressFromStorage,\n    },\n\n    userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_ADD_REVIEW_REQUEST,\n    PRODUCT_ADD_REVIEW_SUCCESS,\n    PRODUCT_ADD_REVIEW_FAIL,\n    PRODUCT_ADD_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} from \"../constants/productConstants\";\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] };\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                pages: action.payload.pages,\n                page: action.payload.page,\n            };\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDetailsReducer = (\n    state = { product: { reviews: [] } },\n    action\n) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state };\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload };\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true };\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_CREATE_RESET:\n            return {};\n\n        default:\n            return state;\n    }\n};\n\nexport const productUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true };\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_UPDATE_RESET:\n            return {};\n\n        default:\n            return state;\n    }\n};\nexport const productAddReviewReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_ADD_REVIEW_REQUEST:\n            return { loading: true };\n        case PRODUCT_ADD_REVIEW_SUCCESS:\n            return { loading: false, success: true };\n        case PRODUCT_ADD_REVIEW_FAIL:\n            return { loading: false, error: action.payload };\n        case PRODUCT_ADD_REVIEW_RESET:\n            return {};\n\n        default:\n            return state;\n    }\n};\n\nexport const productTopReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true };\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload };\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n    }\n};\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_RESET,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_SPAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nexport const cartReducer = (\n    state = { cartItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload; // whats going to come here? -> {product:id, <product details info>, qty}\n            // if the product is already in cart (in cart state):\n            const existItem = state.cartItems.find(\n                (x) => x.product === item.product\n            );\n            if (existItem) {\n                // cartItems object will be: [{product: id1, somethingElse1}, {product: id2, somethingElse2} ... ]\n                return {\n                    // if ids i want to add to cart are already there,\n                    ...state, //        if id of product that already in cart is same as id of product that is came in payload, rewrite that object, i.e. it rewrite {product:id1, somethingElse1} to {{product:id1, somethingElse2}! ... WTF $%$#$Q$%&\"%#\"\n                    cartItems: state.cartItems.map((x) =>\n                        x.product === existItem.product ? item : x\n                    ),\n                };\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                };\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: [\n                    ...state.cartItems.filter(\n                        (x) => x.product !== action.payload\n                    ),\n                ],\n            };\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload,\n            };\n        case CART_SAVE_SPAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            };\n        case CART_RESET:\n            return { ...state, cartItems: [] };\n        default:\n            return state;\n    }\n};\n","import {\n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_RESET,\n    USER_LIST_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_BY_ADMIN_FAIL,\n    USER_UPDATE_BY_ADMIN_REQUEST,\n    USER_UPDATE_BY_ADMIN_RESET,\n    USER_UPDATE_BY_ADMIN_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_RESET,\n    USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true };\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LOGOUT:\n            return {};\n\n        default:\n            return state;\n    }\n};\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true };\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload };\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true };\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload };\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_DETAILS_RESET:\n            return { user: {} };\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_RESET:\n            return { success: false };\n        default:\n            return state;\n    }\n};\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true };\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload };\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_LIST_RESET:\n            return { users: [] };\n        default:\n            return state;\n    }\n};\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true };\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true };\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\n\nexport const userUpdateByAdminReducer = (\n    state = { user: {}, loading: false },\n    action\n) => {\n    switch (action.type) {\n        case USER_UPDATE_BY_ADMIN_REQUEST:\n            return { loading: true };\n\n        case USER_UPDATE_BY_ADMIN_SUCCESS:\n            return { loading: false, success: true };\n        case USER_UPDATE_BY_ADMIN_FAIL:\n            return { loading: false, error: action.payload };\n        case USER_UPDATE_BY_ADMIN_RESET:\n            return {};\n        default:\n            return state;\n    }\n};\n","import {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_RESET,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_LIST_ALL_FAIL,\n    ORDER_LIST_ALL_REQUEST,\n    ORDER_LIST_ALL_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_RESET,\n    ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return { loading: true, success: false };\n\n        case ORDER_CREATE_SUCCESS:\n            return { loading: false, success: true, order: action.payload };\n\n        case ORDER_CREATE_FAIL:\n            return { loading: false, success: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\nexport const orderDetailsReducer = (\n    state = { loading: true, orderItems: [], shippingAddress: {} },\n    action\n) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return { ...state, loading: true, success: false };\n\n        case ORDER_DETAILS_SUCCESS:\n            return { loading: false, order: action.payload };\n\n        case ORDER_DETAILS_FAIL:\n            return { loading: false, success: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return { loading: true, success: false };\n\n        case ORDER_PAY_SUCCESS:\n            return { loading: false, success: true };\n\n        case ORDER_PAY_FAIL:\n            return { loading: false, success: false, error: action.payload };\n        case ORDER_PAY_RESET:\n            return {};\n\n        default:\n            return state;\n    }\n};\nexport const myOrdersListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return { loading: true };\n\n        case ORDER_LIST_MY_SUCCESS:\n            return { loading: false, orders: action.payload };\n\n        case ORDER_LIST_MY_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_LIST_MY_RESET:\n            return { orders: [] };\n\n        default:\n            return state;\n    }\n};\nexport const ordersListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_ALL_REQUEST:\n            return { loading: true };\n\n        case ORDER_LIST_ALL_SUCCESS:\n            return { loading: false, orders: action.payload };\n\n        case ORDER_LIST_ALL_FAIL:\n            return { loading: false, error: action.payload };\n\n        default:\n            return state;\n    }\n};\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return { loading: true };\n\n        case ORDER_DELIVER_SUCCESS:\n            return { loading: false, success: true };\n\n        case ORDER_DELIVER_FAIL:\n            return { loading: false, error: action.payload };\n        case ORDER_DELIVER_RESET:\n            return {};\n\n        default:\n            return state;\n    }\n};\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">\n                        Copyright &copy; ProShop\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import {\n    USER_DELETE_FAIL,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_RESET,\n    USER_DETAILS_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_REQUEST,\n    USER_LIST_RESET,\n    USER_LIST_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGOUT,\n    USER_REGISTER_FAIL,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_UPDATE_BY_ADMIN_FAIL,\n    USER_UPDATE_BY_ADMIN_REQUEST,\n    USER_UPDATE_BY_ADMIN_RESET,\n    USER_UPDATE_BY_ADMIN_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n} from \"../constants/userConstants\";\nimport axios from \"axios\";\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.post(\n            \"/api/users/login\",\n            { email, password },\n            config\n        );\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        //set logged in user to local storage\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem(\"userInfo\");\n    dispatch({ type: USER_LOGOUT });\n    dispatch({ type: USER_DETAILS_RESET });\n    dispatch({ type: ORDER_LIST_MY_RESET });\n    dispatch({ type: USER_LIST_RESET });\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        });\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n            },\n        };\n\n        const { data } = await axios.post(\n            \"/api/users\",\n            { name, email, password },\n            config\n        );\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data,\n        });\n        // login with newly created user right away:\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n\n        //set logged in user to local storage\n\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/users/${id}`, config);\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(`/api/users/profile`, user, config);\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n            payload: data,\n        });\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data,\n        });\n        localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/users`, config);\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.delete(`/api/users/${id}`, config);\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const updateUserByAdmin = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_BY_ADMIN_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/users/${user._id}`,\n            user,\n            config\n        );\n\n        dispatch({\n            type: USER_UPDATE_BY_ADMIN_SUCCESS,\n            payload: data,\n        });\n        dispatch({\n            //to display updated user info\n            type: USER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_BY_ADMIN_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n","import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\n\nexport const SearchBox = ({ history }) => {\n    const [keyword, setKeyword] = useState(\"\");\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        if (keyword.trim()) {\n            history.push(`/search/${keyword}`);\n        } else {\n            history.push(\"/\");\n        }\n    };\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Form.Control\n                type=\"text\"\n                name=\"q\"\n                onChange={(e) => setKeyword(e.target.value)}\n                value={keyword}\n                placeholder=\"Search products...\"\n                className=\"ml-sm-2 mr-sm-5\"\n            ></Form.Control>\n            <Button type=\"submit\" variant=\"outline-success\" className=\"p-2\">\n                Search\n            </Button>\n        </Form>\n    );\n};\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav, Navbar, Container, NavDropdown } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport { SearchBox } from \"./SearchBox\";\n\nconst Header = () => {\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n    const dispatch = useDispatch();\n\n    const logoutHandler = () => {\n        dispatch(logout());\n    };\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>ProShop</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Route\n                            render={({ history }) => (\n                                <SearchBox history={history} />\n                            )}\n                        ></Route>\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to=\"/cart\">\n                                <Nav.Link>\n                                    <i className=\"fas fa-shopping-cart\"></i>Cart\n                                </Nav.Link>\n                            </LinkContainer>\n                            {userInfo ? (\n                                <NavDropdown\n                                    title={userInfo.name}\n                                    id=\"username\"\n                                >\n                                    <LinkContainer to=\"/profile\">\n                                        <NavDropdown.Item>\n                                            Profile\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            ) : (\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link>\n                                        <i className=\"fas fa-user\"></i>Login\n                                    </Nav.Link>\n                                </LinkContainer>\n                            )}\n                            {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title=\"Admin\" id=\"adminmenu\">\n                                    <LinkContainer to=\"/admin/userlist\">\n                                        <NavDropdown.Item>\n                                            Users\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/admin/productlist\">\n                                        <NavDropdown.Item>\n                                            Products\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/admin/orderlist\">\n                                        <NavDropdown.Item>\n                                            Orders\n                                        </NavDropdown.Item>\n                                    </LinkContainer>\n                                </NavDropdown>\n                            )}\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Rating = ({ value, text, color }) => {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 1\n                            ? \"fas fa-star\"\n                            : value >= 0.5\n                            ? \"fas fa-star-half-alt\"\n                            : \"far fa-star\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 2\n                            ? \"fas fa-star\"\n                            : value >= 1.5\n                            ? \"fas fa-star-half-alt\"\n                            : \"far fa-star\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 3\n                            ? \"fas fa-star\"\n                            : value >= 2.5\n                            ? \"fas fa-star-half-alt\"\n                            : \"far fa-star\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 4\n                            ? \"fas fa-star\"\n                            : value >= 3.5\n                            ? \"fas fa-star-half-alt\"\n                            : \"far fa-star\"\n                    }\n                ></i>\n            </span>\n            <span>\n                <i\n                    style={{ color }}\n                    className={\n                        value >= 5\n                            ? \"fas fa-star\"\n                            : value >= 4.5\n                            ? \"fas fa-star-half-alt\"\n                            : \"far fa-star\"\n                    }\n                ></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    );\n};\nRating.propTypes = {\n    value: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string,\n};\nRating.defaultProps = {\n    color: \"#f8e825\",\n};\nexport default Rating;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"./Rating\";\n\nconst Product = ({ product }) => {\n    return (\n        <Card className=\"my-3 p3\">\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} variant=\"top\" />\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n                <Card.Text as=\"div\">\n                    <Rating\n                        value={+product.rating}\n                        text={`${product.numReviews} reviews`}\n                    />\n                </Card.Text>\n\n                <Card.Text as=\"h3\"> ¥{product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant = \"info\", children }) => {\n    return <Alert variant={variant}>{children}</Alert>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n    return (\n        <Spinner\n            animation=\"border\"\n            role=\"status\"\n            style={{\n                width: \"100px\",\n                height: \"100px\",\n                margin: \"auto\",\n                display: \"block\",\n            }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    );\n};\n\nexport const LoaderSmall = () => {\n    return (\n        <Spinner\n            animation=\"border\"\n            role=\"status\"\n            style={{\n                width: \"20px\",\n                height: \"20px\",\n                margin: \"auto\",\n                display: \"block\",\n            }}\n        >\n            <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n    );\n};\n\nexport default Loader;\n","// constant -> reducer -> action\n\nimport {\n    PRODUCT_ADD_REVIEW_FAIL,\n    PRODUCT_ADD_REVIEW_REQUEST,\n    PRODUCT_ADD_REVIEW_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_TOP_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n} from \"../constants/productConstants\";\nimport axios from \"axios\";\n\nexport const listProducts = (keyword = \"\", pageNumber = \"\") => async (\n    dispatch\n) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST });\n\n        const { data } = await axios.get(\n            `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n        );\n\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_LIST_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/products/${id}`);\n\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from PRODUCTLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.delete(`/api/products/${id}`, config);\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST,\n        });\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post(\"/api/products\", {}, config);\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/products/${product._id}`,\n            product,\n            config\n        );\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        });\n        dispatch({\n            //to display updated product info\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const addReviewProduct = (productId, review) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: PRODUCT_ADD_REVIEW_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews`,\n            review,\n            config\n        );\n\n        dispatch({\n            type: PRODUCT_ADD_REVIEW_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_ADD_REVIEW_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST });\n\n        const { data } = await axios.get(`/api/products/top`);\n\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n","import React from \"react\";\nimport { Pagination } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport const Paginate = ({ page, pages, isAdmin = false, keyword = \"\" }) => {\n    // pgess must be greater than 1 to do pagination\n\n    return (\n        pages > 1 && (\n            <Pagination>\n                {[...Array(pages).keys()].map((x) => (\n                    <LinkContainer\n                        key={x + 1}\n                        to={\n                            !isAdmin\n                                ? keyword\n                                    ? `/search/${keyword}/page/${x + 1}`\n                                    : `/page/${x + 1}`\n                                : `/admin/productlist/${x + 1}`\n                        }\n                    >\n                        <Pagination.Item active={x + 1 === page}>\n                            {x + 1}\n                        </Pagination.Item>\n                    </LinkContainer>\n                ))}\n            </Pagination>\n        )\n    );\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Carousel, Image } from \"react-bootstrap\";\nimport { listTopProducts } from \"../actions/productActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nexport const ProductCarousel = () => {\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(\n        (state) => state.productTop\n    );\n\n    useEffect(() => {\n        dispatch(listTopProducts());\n    }, [dispatch]);\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant=\"warning\">error</Message>\n    ) : (\n        <Carousel pause=\"hover\" className=\"bg-dark\">\n            {products.map((product) => (\n                <Carousel.Item key={product._id}>\n                    <Link to={`/products/${product._id}`}>\n                        <Image\n                            src={product.image}\n                            alt={product.name}\n                            fluid\n                        ></Image>\n                        <Carousel.Caption>\n                            <h3>\n                                {product.name} (${product.price})\n                            </h3>\n                        </Carousel.Caption>\n                    </Link>\n                </Carousel.Item>\n            ))}\n        </Carousel>\n    );\n};\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nexport const Meta = ({ title, description, keywords }) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={description}></meta>\n            <meta name=\"keywords\" content={keywords}></meta>\n        </Helmet>\n    );\n};\n\nMeta.defaultProps = {\n    title: \"Welcome to ProShop\",\n    keywords: \"electronics, shop\",\n    description: \"web shop of electronics with best prices\",\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProducts } from \"../actions/productActions\";\nimport { Paginate } from \"../components/Paginate\";\nimport { ProductCarousel } from \"../components/ProductCarousel\";\nimport { Meta } from \"../components/Meta\";\nimport { Link } from \"react-router-dom\";\nconst Homescreen = ({ match }) => {\n    const keyword = match.params.keyword;\n    const pageNumber = match.params.pageNumber || 1;\n\n    // const [products, setProducts] = useState([]); bcuz we using Redux state now\n    const dispatch = useDispatch();\n\n    const productList = useSelector((state) => state.productList);\n\n    const { error, loading, products, page, pages } = productList;\n\n    useEffect(() => {\n        dispatch(listProducts(keyword, pageNumber));\n    }, [dispatch, keyword, pageNumber]);\n\n    return (\n        <>\n            <Meta />\n            {!keyword ? (\n                <ProductCarousel />\n            ) : (\n                <Link to=\"/\" className=\"btn btn-light\">\n                    Go back\n                </Link>\n            )}\n            <h1>Latest Products</h1>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant=\"danger\">{error}</Message>\n            ) : (\n                <>\n                    <Row>\n                        {products.map((product) => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate\n                        pages={pages}\n                        page={page}\n                        keyword={keyword || \"\"}\n                    />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default Homescreen;\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Card,\n    Col,\n    Form,\n    Image,\n    ListGroup,\n    ListGroupItem,\n    Row,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Rating from \"../components/Rating\";\nimport {\n    addReviewProduct,\n    listProductDetails,\n} from \"../actions/productActions\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nimport { PRODUCT_ADD_REVIEW_RESET } from \"../constants/productConstants\";\nimport { Meta } from \"../components/Meta\";\n\nconst ProductScreen = ({ history, match }) => {\n    // match comes from Router. match.params.x here :x. abc/:x/:y,  -> match.params.x, match.params.y\n\n    //const [product, setProduct] = useState({});\n    const [qty, setQty] = useState(1); // qty to add to cart\n    const [rating, setRating] = useState(0); // qty to add to cart\n    const [comment, setComment] = useState(\"\"); // qty to add to cart\n\n    //find producrt by id. (id is getted from link, from Router's :id)\n\n    const dispatch = useDispatch();\n    const productDetails = useSelector((state) => state.productDetails);\n    const { loading, error, product } = productDetails;\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n    const {\n        error: errorProductReview,\n        success: successProductReview,\n    } = useSelector((state) => state.productAddReview);\n\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?qty=${qty}`);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(addReviewProduct(match.params.id, { rating, comment }));\n    };\n\n    useEffect(() => {\n        // if (successProductReview) {\n        //     dispatch({ type: PRODUCT_ADD_REVIEW_RESET });\n        // }\n\n        dispatch({ type: PRODUCT_ADD_REVIEW_RESET });\n\n        dispatch(listProductDetails(match.params.id));\n    }, [dispatch, match, successProductReview]);\n\n    return (\n        <>\n            <Link to=\"/\" className=\"btn btn-dark my-3\">\n                Go back\n            </Link>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant=\"danger\">{error}</Message>\n            ) : (\n                <>\n                    <Meta title={product.name} />\n                    <Row>\n                        <Col md={6}>\n                            <Image\n                                fluid\n                                src={product.image}\n                                alt={product.name}\n                            ></Image>{\" \"}\n                            {/*fluid makes image to stay inside container */}\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroupItem>\n                                    <h3>{product.name}</h3>\n                                </ListGroupItem>\n                                <ListGroupItem>\n                                    <Rating\n                                        value={+product.rating}\n                                        text={`${product.numReviews} reviews`}\n                                    />\n                                </ListGroupItem>\n                                <ListGroupItem>\n                                    Price: ¥{product.price}\n                                </ListGroupItem>\n                                <ListGroupItem>\n                                    Description: {product.description}\n                                </ListGroupItem>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <Card>\n                                <ListGroup variant=\"flush\">\n                                    <ListGroupItem>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col>\n                                                <strong>{product.price}</strong>\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n\n                                    <ListGroupItem>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>\n                                                {product.countInStock > 0\n                                                    ? \"In stock\"\n                                                    : \"Out of stock\"}\n                                            </Col>\n                                        </Row>\n                                    </ListGroupItem>\n                                    {product.countInStock > 0 && (\n                                        <ListGroupItem>\n                                            <Row>\n                                                <Col>Qty:</Col>\n                                                <Col>\n                                                    <Form.Control\n                                                        as=\"select\"\n                                                        value={qty}\n                                                        onChange={(e) =>\n                                                            setQty(\n                                                                e.target.value\n                                                            )\n                                                        }\n                                                    >\n                                                        {[\n                                                            ...Array(\n                                                                product.countInStock\n                                                            ).keys(),\n                                                        ].map((x) => (\n                                                            <option\n                                                                key={x + 1}\n                                                                value={x + 1}\n                                                            >\n                                                                {x + 1}\n                                                            </option>\n                                                        ))}\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroupItem>\n                                    )}\n                                    <ListGroupItem>\n                                        <Button\n                                            className=\"btn-block\"\n                                            type=\"button\"\n                                            disabled={\n                                                product.countInStock === 0\n                                            }\n                                            onClick={addToCartHandler}\n                                        >\n                                            Add to cart\n                                        </Button>\n                                    </ListGroupItem>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6}>\n                            <h2>Reviews</h2>\n                            {product.reviews.length === 0 && (\n                                <Message> No reviews </Message>\n                            )}\n                            <ListGroup variant=\"flush\">\n                                {product.reviews.map((review) => (\n                                    <ListGroupItem key={review._id}>\n                                        <strong>{review.name}</strong>\n                                        <Rating\n                                            value={review.rating}\n                                            text={review.rating}\n                                        />\n                                        <p>\n                                            {review.createdAt.substring(0, 10)}\n                                        </p>\n                                        <p>{review.comment}</p>\n                                    </ListGroupItem>\n                                ))}\n                                <ListGroupItem>\n                                    <h2>Write a review</h2>\n                                    {errorProductReview && (\n                                        <Message variant=\"warning\">\n                                            {errorProductReview}\n                                        </Message>\n                                    )}\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId=\"rating\">\n                                                <Form.Label>Rating</Form.Label>\n\n                                                <Form.Control\n                                                    as=\"select\"\n                                                    value={rating}\n                                                    onChange={(e) =>\n                                                        setRating(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                >\n                                                    <option value=\"\">\n                                                        {\" \"}\n                                                        Select...\n                                                    </option>\n                                                    <option value=\"1\">\n                                                        1 - Poor\n                                                    </option>\n                                                    <option value=\"2\">\n                                                        2 - Fair\n                                                    </option>\n                                                    <option value=\"3\">\n                                                        3 - Good\n                                                    </option>\n                                                    <option value=\"4\">\n                                                        4 - Very good\n                                                    </option>\n                                                    <option value=\"5\">\n                                                        5 - Excellent\n                                                    </option>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            <Form.Group controlId=\"comment\">\n                                                <Form.Label>Review:</Form.Label>\n                                                <Form.Control\n                                                    as=\"textarea\"\n                                                    rows=\"3\"\n                                                    value={comment}\n                                                    onChange={(e) =>\n                                                        setComment(\n                                                            e.target.value\n                                                        )\n                                                    }\n                                                ></Form.Control>\n                                            </Form.Group>\n                                            <Button\n                                                type=\"submit\"\n                                                variant=\"primary\"\n                                            >\n                                                Submit\n                                            </Button>\n                                        </Form>\n                                    ) : (\n                                        <Message>\n                                            Please\n                                            <Link to=\"/login\">login</Link> to\n                                            add a review\n                                        </Message>\n                                    )}\n                                </ListGroupItem>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductScreen;\n","import {\n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_RESET,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_SPAYMENT_METHOD,\n} from \"../constants/cartConstants\";\n\nimport axios from \"axios\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty,\n        },\n    });\n    // add to state store \"cart\"\n\n    // get from store(already processed in reducer) and place (replace) localStorage\n    localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n    });\n    localStorage.setItem(\n        \"cartItems\",\n        JSON.stringify(getState().cart.cartItems)\n    );\n};\n\nexport const saveShippingAddress = (data) => async (dispatch, getState) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n    });\n    localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\n};\nexport const savePaymentMethod = (data) => (dispatch, getState) => {\n    dispatch({\n        type: CART_SAVE_SPAYMENT_METHOD,\n        payload: data,\n    });\n    localStorage.setItem(\"shippingPaymentMethod\", JSON.stringify(data));\n};\n\nexport const resetCart = () => (dispatch) => {\n    dispatch({ type: CART_RESET });\n    localStorage.removeItem(\"cartItems\");\n};\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\nimport {\n    Button,\n    Card,\n    Col,\n    Form,\n    Image,\n    ListGroup,\n    Row,\n} from \"react-bootstrap\";\n\n// when add to cart is pressed, it will redirect to cart screen. <Route path=\"/cart/:id?\" component={CartScreen} />\nconst CartScreen = ({ match, location, history }) => {\n    const productId = match.params.id;\n    const qty = location.search ? +location.search.split(\"=\")[1] : 1;\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector((state) => state.cart);\n\n    useEffect(() => {\n        if (productId) {\n            // if cartScreen is displayed after we added something to cart:\n            dispatch(addToCart(productId, qty));\n        }\n    }, [dispatch, productId, qty]);\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id));\n    };\n\n    const checkOutHandler = () => {\n        history.push(\"/login?redirect=shipping\");\n    };\n\n    return (\n        <Row>\n            <Col md={8}>\n                {cartItems.lenght === 0 ? (\n                    <Message>\n                        Your cart is empty <Link to=\"/\">Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant=\"flush\">\n                        {cartItems.map((item) => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image\n                                            src={item.image}\n                                            fluid\n                                            alt={item.name}\n                                            rounded\n                                        />\n                                    </Col>\n                                    <Col ms={3}>\n                                        <Link to={`/product/${item.product}`}>\n                                            {item.name}\n                                        </Link>\n                                    </Col>\n                                    <Col md={2}>￥{item.price}</Col>\n                                    <Col md={2}>\n                                        <Form.Control\n                                            as=\"select\"\n                                            value={item.qty}\n                                            onChange={(e) =>\n                                                dispatch(\n                                                    addToCart(\n                                                        item.product,\n                                                        +e.target.value\n                                                    )\n                                                )\n                                            }\n                                        >\n                                            {[\n                                                ...Array(\n                                                    item.countInStock\n                                                ).keys(),\n                                            ].map((x) => (\n                                                <option\n                                                    key={x + 1}\n                                                    value={x + 1}\n                                                >\n                                                    {x + 1}\n                                                </option>\n                                            ))}\n                                        </Form.Control>\n                                    </Col>\n                                    <Col md={2}>\n                                        <Button\n                                            type=\"button\"\n                                            variant=\"light\"\n                                            onClick={() =>\n                                                removeFromCartHandler(\n                                                    item.product\n                                                )\n                                            }\n                                        >\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h6>\n                                Subtotal (\n                                {cartItems.reduce(\n                                    (acc, cur) => acc + cur.qty,\n                                    0\n                                )}\n                                ) items{\" \"}\n                            </h6>\n                            ￥\n                            {cartItems\n                                .reduce(\n                                    (acc, cur) => acc + cur.price * cur.qty,\n                                    0\n                                )\n                                .toFixed(2)}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button\n                                type=\"button\"\n                                className=\"btn-block\"\n                                disabled={cartItems.length === 0}\n                                onClick={checkOutHandler}\n                            >\n                                Check out\n                            </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst FormContainer = ({ children }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default FormContainer;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\n\nconst LoginScreen = ({ location, history }) => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const userLogin = useSelector((state) => state.userLogin);\n\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n    const { loading, error, userInfo } = userLogin;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch login\n        dispatch(login(email, password));\n    };\n\n    return (\n        <FormContainer>\n            <h1>Sign In</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"enter email\"\n                        value={email}\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"enter password\"\n                        value={password}\n                        onChange={(e) => {\n                            setPassword(e.target.value);\n                        }}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">\n                    Sign In\n                </Button>\n            </Form>\n\n            <Row className=\"py-3\">\n                <Col>\n                    New Customer?{\" \"}\n                    <Link\n                        to={\n                            redirect\n                                ? `/register?redirect=${redirect}`\n                                : \"/register\"\n                        }\n                    >\n                        Register\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\n\nconst RegisterScreen = ({ location, history }) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const userRegister = useSelector((state) => state.userRegister);\n\n    const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n    const { loading, error, userInfo } = userRegister;\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push(redirect);\n        }\n    }, [history, userInfo, redirect]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch register\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords do not match\");\n        } else {\n            dispatch(register(name, email, password));\n        }\n    };\n\n    return (\n        <FormContainer>\n            <h1>Register</h1>\n            {error && <Message variant=\"danger\">{error}</Message>}\n            {message && <Message variant=\"danger\">{message}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"name\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"enter your name\"\n                        value={name}\n                        onChange={(e) => {\n                            setName(e.target.value);\n                        }}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"enter email\"\n                        value={email}\n                        onChange={(e) => {\n                            setEmail(e.target.value);\n                        }}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"enter password\"\n                        value={password}\n                        onChange={(e) => {\n                            setPassword(e.target.value);\n                        }}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"password\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"confirm password\"\n                        value={confirmPassword}\n                        onChange={(e) => {\n                            setConfirmPassword(e.target.value);\n                        }}\n                    ></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">\n                    Register\n                </Button>\n            </Form>\n            <Row className=\"py-3\">\n                <Col>\n                    Have an account?{\" \"}\n                    <Link\n                        to={redirect ? `/login?redirect=${redirect}` : \"/login\"}\n                    >\n                        Log In\n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    );\n};\n\nexport default RegisterScreen;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\";\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\nimport { listMyOrders } from \"../actions/orderActions\";\n\nconst ProfileScreen = ({ location, history }) => {\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [message, setMessage] = useState(null);\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n    const userOrders = useSelector((state) => state.myOrdersList);\n    const {\n        loading: myOrdersLoading,\n        error: myOrdersError,\n        orders,\n    } = userOrders;\n\n    const userUpdate = useSelector((state) => state.userUpdate);\n    const { success } = userUpdate;\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\");\n        } else {\n            if (!user.name || success) {\n                dispatch({ type: USER_UPDATE_RESET });\n                dispatch(getUserDetails(\"profile\"));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n            }\n            dispatch(listMyOrders());\n        }\n    }, [dispatch, user, userInfo, history, success]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        // dispatch register\n        if (password !== confirmPassword) {\n            setMessage(\"Passwords do not match\");\n        } else {\n            // dispatch(register(name, email, password));\n            // DISPATCH UPDATE\n            dispatch(updateUser({ id: user._id, name, email, password }));\n        }\n    };\n\n    return (\n        <Row>\n            <Col md={3}>\n                <h2>User Profile</h2>\n                {error && <Message variant=\"danger\">{error}</Message>}\n                {message && <Message variant=\"danger\">{message}</Message>}\n                {loading && <Loader />}\n                {success && <Message variant=\"success\">Success</Message>}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"enter your name\"\n                            value={name}\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            placeholder=\"enter email\"\n                            value={email}\n                            onChange={(e) => {\n                                setEmail(e.target.value);\n                            }}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"enter password\"\n                            value={password}\n                            onChange={(e) => {\n                                setPassword(e.target.value);\n                            }}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"confirm password\"\n                            value={confirmPassword}\n                            onChange={(e) => {\n                                setConfirmPassword(e.target.value);\n                            }}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"primary\">\n                        Update\n                    </Button>\n                </Form>\n            </Col>\n\n            <Col md={9}>\n                <h2>My orders</h2>\n                {myOrdersLoading ? (\n                    <Loader />\n                ) : myOrdersError ? (\n                    <Message variant=\"warning\">{myOrdersError}</Message>\n                ) : (\n                    <Table\n                        stripped\n                        bordered\n                        hover\n                        responsive\n                        className=\"table-sm\"\n                    >\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Date</th>\n                                <th>Total</th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {orders.map((order) => (\n                                <tr key={order._id}>\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    <td>{order.totalPrice}</td>\n                                    <td>\n                                        {order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                            <i\n                                                className=\"fas fa-times\"\n                                                style={{ color: \"red\" }}\n                                            ></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        {order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                            <i\n                                                className=\"fas fa-times\"\n                                                style={{ color: \"red\" }}\n                                            ></i>\n                                        )}\n                                    </td>\n                                    <td>\n                                        <LinkContainer\n                                            to={`/order/${order._id}`}\n                                        >\n                                            <Button variant=\"light\">\n                                                Details\n                                            </Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                )}\n            </Col>\n        </Row>\n    );\n};\n\nexport default ProfileScreen;\n","import axios from \"axios\";\nimport {\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_LIST_ALL_FAIL,\n    ORDER_LIST_ALL_REQUEST,\n    ORDER_LIST_ALL_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        });\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post(\"/api/orders\", order, config);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        });\n\n        localStorage.removeItem(\"orderItems\");\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        });\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/${id}`, config);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const payOrder = (orderId, paymentResult) => async (\n    dispatch,\n    getState\n) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST,\n        });\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${orderId}/pay`,\n            paymentResult,\n            config\n        );\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        });\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/myorders`, config);\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_ALL_REQUEST,\n        });\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders`, config);\n\n        dispatch({\n            type: ORDER_LIST_ALL_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_ALL_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST,\n        });\n        const {\n            userLogin: { userInfo }, //take from userLogin part of the state\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver`,\n            {},\n            config\n        );\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error?.response?.data.message || error.message,\n        });\n    }\n};\n","import React from \"react\";\nimport { Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className=\"justify-content-center mb-4\">\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to=\"/login\">\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Sign In</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to=\"/shipping\">\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to=\"/payment\">\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to=\"/placeorder\">\n                        <Nav.Link>Place order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    );\n};\n\nexport default CheckoutSteps;\n","import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { saveShippingAddress } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst ShippingScreen = ({ history }) => {\n    // get cart from redux store and fill to state\n    const cart = useSelector((state) => state.cart); //get cart\n    const { shippingAddress } = cart;\n    const [shippingDetails, setShippingDetails] = useState(shippingAddress);\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        setShippingDetails({\n            ...shippingDetails,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(saveShippingAddress(shippingDetails));\n        history.push(\"/payment\");\n    };\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control\n                        name=\"country\"\n                        type=\"text\"\n                        placeholder=\"Enter country\"\n                        value={shippingDetails.country}\n                        onChange={handleChange}\n                        required\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control\n                        name=\"city\"\n                        type=\"text\"\n                        placeholder=\"Enter city\"\n                        value={shippingDetails.city}\n                        onChange={handleChange}\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"postalCode\">\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control\n                        name=\"postalCode\"\n                        type=\"text\"\n                        placeholder=\"Enter postalCode\"\n                        value={shippingDetails.postalCode}\n                        onChange={handleChange}\n                        required\n                    ></Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control\n                        name=\"address\"\n                        type=\"text\"\n                        placeholder=\"Enter address\"\n                        value={shippingDetails.address}\n                        onChange={handleChange}\n                        required\n                    ></Form.Control>\n                </Form.Group>\n                <div className=\"d-flex justify-content-end\">\n                    <Button type=\"submit\" variant=\"primary\">\n                        Continue\n                    </Button>\n                </div>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default ShippingScreen;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { savePaymentMethod } from \"../actions/cartActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport FormContainer from \"../components/FormContainer\";\n\nconst PaymentMethodScreen = ({ history }) => {\n    // get cart from redux store and fill to state\n    const cart = useSelector((state) => state.cart); //get cart\n    const { shippingAddress } = cart;\n\n    if (!shippingAddress) {\n        history.push(\"/shipping\");\n    }\n\n    const [paymentMethod, setPaymentMethod] = useState(null);\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        setPaymentMethod(e.target.value);\n    };\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(savePaymentMethod(paymentMethod));\n        history.push(\"/placeorder\");\n    };\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <h1>Payment Methods</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label as=\"legend\">Select method</Form.Label>\n                    <Col>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"PayPal of credit card\"\n                            id=\"PayPal\"\n                            name=\"paymentMethod\"\n                            value=\"PayPal\"\n                            onChange={handleChange}\n                        ></Form.Check>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Yandex.Money\"\n                            id=\"YandexMoney\"\n                            name=\"paymentMethod\"\n                            value=\"YandexMoney\"\n                            onChange={handleChange}\n                        ></Form.Check>\n                    </Col>\n                </Form.Group>\n\n                <div className=\"d-flex justify-content-end\">\n                    <Button\n                        disabled={!paymentMethod}\n                        type=\"submit\"\n                        variant=\"primary\"\n                    >\n                        Continue\n                    </Button>\n                </div>\n            </Form>\n        </FormContainer>\n    );\n};\n\nexport default PaymentMethodScreen;\n","import React, { useEffect } from \"react\";\nimport {\n    Button,\n    Card,\n    Col,\n    Image,\n    ListGroup,\n    ListGroupItem,\n    Row,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { resetCart } from \"../actions/cartActions\";\nimport { createOrder } from \"../actions/orderActions\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport Message from \"../components/Message\";\n\nconst PlaceOrderScreen = ({ history }) => {\n    const dispatch = useDispatch();\n    const cart = useSelector((state) => state.cart);\n\n    // calculate prices\n\n    const addTrailingZeros = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    cart.itemsPrice = addTrailingZeros(\n        cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    );\n    cart.shippingPrice = addTrailingZeros(cart.itemsPrice > 100 ? 0 : 10);\n\n    cart.taxPrice = addTrailingZeros(+(0.15 * cart.itemsPrice));\n\n    cart.totalPrice = +cart.itemsPrice + +cart.shippingPrice + +cart.taxPrice;\n\n    const { order, success, error } = useSelector((state) => state.orderCreate);\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`);\n        }\n    }, [history, success]);\n\n    const placeOrderHandler = () => {\n        dispatch(\n            createOrder({\n                orderItems: cart.cartItems,\n                shippingAddress: cart.shippingAddress,\n                paymentMethod: cart.paymentMethod,\n                itemsPrice: cart.itemsPrice,\n                shippingPrice: cart.shippingPrice,\n                taxPrice: cart.taxPrice,\n                totalPrice: cart.totalPrice,\n            })\n        );\n        dispatch(resetCart());\n    };\n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroupItem>\n                            <h3>Shipping</h3>\n                            <p>\n                                <strong>Address:</strong>\n                                {cart.shippingAddress.address},\n                                {cart.shippingAddress.city},\n                                {cart.shippingAddress.postalCode},\n                                {cart.shippingAddress.country}\n                            </p>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <h3>Payment method:</h3>\n                            <strong>{cart.paymentMethod}</strong>\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <h3>Order items</h3>\n                            {cart.cartItems.length === 0 ? (\n                                <Message>Your cart is empty </Message>\n                            ) : (\n                                <ListGroup variant=\"flush\">\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroupItem key={item.product}>\n                                            <Row>\n                                                <Col md={3}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link\n                                                        to={`/product/${item.product}`}\n                                                    >\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} =\n                                                    ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroupItem>\n                                    ))}\n                                </ListGroup>\n                            )}\n                            <strong>{cart.paymentMethod}</strong>\n                        </ListGroupItem>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup>\n                            <ListGroupItem>\n                                <h2>Order Summary</h2>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                {error && (\n                                    <Message variant=\"danger\">{error}</Message>\n                                )}\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Button\n                                    type=\"button\"\n                                    className=\"btn-blobk\"\n                                    disabled={cart.cartItems.length === 0}\n                                    onClick={placeOrderHandler}\n                                >\n                                    Place Order\n                                </Button>\n                            </ListGroupItem>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default PlaceOrderScreen;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    Button,\n    Card,\n    Col,\n    Image,\n    ListGroup,\n    ListGroupItem,\n    Row,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n    deliverOrder,\n    getOrderDetails,\n    payOrder,\n} from \"../actions/orderActions\";\nimport Message from \"../components/Message\";\nimport Loader, { LoaderSmall } from \"../components/Loader\";\nimport axios from \"axios\";\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport {\n    ORDER_DELIVER_RESET,\n    ORDER_PAY_RESET,\n} from \"../constants/orderConstants\";\n\nconst OrderScreen = ({ match, history }) => {\n    const orderId = match.params.id;\n    const dispatch = useDispatch();\n    const [sdkReady, setSdkReady] = useState(false);\n\n    const addTrailingZeros = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const { order, loading, error } = useSelector(\n        (state) => state.orderDetails\n    );\n\n    const { loading: loadingPay, success: successPay } = useSelector(\n        (state) => state.orderPay\n    );\n\n    const {\n        loading: loadingDeliver,\n        success: successDeliver,\n        error: errorDeliver,\n    } = useSelector((state) => state.orderDeliver);\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult));\n    };\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order));\n        dispatch({ type: ORDER_DELIVER_RESET });\n    };\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\");\n        }\n        const addPaypalScript = async () => {\n            const { data: clientId } = await axios.get(\"/api/config/paypal\");\n            const script = document.createElement(\"script\");\n            script.type = \"text/javascript\";\n            script.async = true;\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n            script.onload = () => {\n                setSdkReady(true);\n            };\n            document.body.appendChild(script);\n        };\n        if (!order || successPay || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET });\n            dispatch({ type: ORDER_DELIVER_RESET });\n\n            dispatch(getOrderDetails(orderId));\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPaypalScript();\n            } else {\n                setSdkReady(true);\n            }\n        }\n    }, [\n        dispatch,\n        history,\n        userInfo,\n        orderId,\n        successPay,\n        successDeliver,\n        order,\n    ]);\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n    ) : (\n        <>\n            <h1>Order {order._id}</h1>\n\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroupItem>\n                            <h3>Shipping</h3>\n                            <p>\n                                <strong>Name:&nbsp;</strong>\n                                {order.user.name}\n                            </p>\n                            <p>\n                                <strong>Email:&nbsp;</strong>\n                                {order.user.email}\n                            </p>\n\n                            <p>\n                                <strong>Address:</strong>\n                                {order.shippingAddress.address},\n                                {order.shippingAddress.city},\n                                {order.shippingAddress.postalCode},\n                                {order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                                <Message variant=\"success\">\n                                    Delivered on {order.deliveredAt}\n                                </Message>\n                            ) : (\n                                <Message variant=\"warning\">\n                                    Not delivered yet\n                                </Message>\n                            )}\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <h3>Payment method:</h3>\n                            <p>\n                                <strong>{order.paymentMethod}</strong>\n                            </p>\n                            {order.isPaid ? (\n                                <Message variant=\"success\">\n                                    Paid on {order.paidAt}\n                                </Message>\n                            ) : (\n                                <Message variant=\"warning\">\n                                    Not paid yet\n                                </Message>\n                            )}\n                        </ListGroupItem>\n                        <ListGroupItem>\n                            <h3>Order items</h3>\n                            {order.orderItems.length === 0 ? (\n                                <Message>Order is empty </Message>\n                            ) : (\n                                <ListGroup variant=\"flush\">\n                                    {order.orderItems.map((item) => (\n                                        <ListGroupItem key={item.product}>\n                                            <Row>\n                                                <Col md={3}>\n                                                    <Image\n                                                        src={item.image}\n                                                        alt={item.name}\n                                                        fluid\n                                                        rounded\n                                                    />\n                                                </Col>\n                                                <Col>\n                                                    <Link\n                                                        to={`/product/${item.product}`}\n                                                    >\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x $\n                                                    {addTrailingZeros(\n                                                        item.price\n                                                    )}\n                                                    = $\n                                                    {addTrailingZeros(\n                                                        item.qty * item.price\n                                                    )}\n                                                </Col>\n                                            </Row>\n                                        </ListGroupItem>\n                                    ))}\n                                </ListGroup>\n                            )}\n                            <strong>{order.paymentMethod}</strong>\n                        </ListGroupItem>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup>\n                            <ListGroupItem>\n                                <h2>Order Summary</h2>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>\n                                        ${addTrailingZeros(order.itemsPrice)}\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>\n                                        ${addTrailingZeros(order.shippingPrice)}\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>\n                                        ${addTrailingZeros(order.taxPrice)}\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                            <ListGroupItem>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>\n                                        ${addTrailingZeros(order.totalPrice)}\n                                    </Col>\n                                </Row>\n                            </ListGroupItem>\n                            {!order.isPaid && (\n                                <ListGroupItem>\n                                    {loadingPay && <Loader />}\n                                    {!sdkReady ? (\n                                        <Loader />\n                                    ) : (\n                                        <PayPalButton\n                                            amount={addTrailingZeros(\n                                                order.totalPrice\n                                            )}\n                                            onSuccess={successPaymentHandler}\n                                        ></PayPalButton>\n                                    )}\n                                </ListGroupItem>\n                            )}\n                            {loadingDeliver && <LoaderSmall />}\n                            {errorDeliver && (\n                                <Message variant=\"warning\">\n                                    {errorDeliver}\n                                </Message>\n                            )}\n                            {userInfo &&\n                                userInfo.isAdmin &&\n                                order.isPaid &&\n                                !order.isDelivered && (\n                                    <ListGroupItem>\n                                        <Button\n                                            className=\"btn btn-block\"\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark as delivered\n                                        </Button>\n                                    </ListGroupItem>\n                                )}\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default OrderScreen;\n","import React, { useState, useEffect } from \"react\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\nimport { listUsers, deleteUser } from \"../actions/userActions\";\nimport { Button, Table } from \"react-bootstrap\";\n\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n    const userList = useSelector((state) => state.userList);\n    const { loading, error, users } = userList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const { success: successDelete } = useSelector((state) => state.userDelete);\n\n    const deleteHandler = (e) => {\n        if (window.confirm(\"Are you Sure?\")) {\n            dispatch(deleteUser(e.target.parentNode.dataset.value));\n        }\n    };\n\n    useEffect(() => {\n        // only show this if user is Admin. if not, redirect to login page\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers());\n        } else {\n            history.push(\"/login\");\n        }\n    }, [dispatch, history, userInfo, successDelete]); //success delete changes and list users is reloaded\n    return (\n        <>\n            <h2>Users</h2>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant=\"warning\">{error}</Message>\n            ) : (\n                <Table striped responsive hover bordered className=\"table-sm\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Adimn</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map((user) => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td>\n                                    <a href={`mailto:${user.email}`}>\n                                        {user.email}\n                                    </a>\n                                </td>\n                                <td>\n                                    {user.isAdmin ? (\n                                        <i\n                                            className=\"fas fa-check\"\n                                            style={{ color: \"green\" }}\n                                        ></i>\n                                    ) : (\n                                        <i\n                                            className=\"fas fa-times\"\n                                            style={{ color: \"red\" }}\n                                        ></i>\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer\n                                        to={`/admin/user/${user._id}/edit`}\n                                    >\n                                        <Button\n                                            variant=\"light\"\n                                            className=\"btn-sm\"\n                                        >\n                                            <i className=\"fas fa-edit\"></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"btn-sm\"\n                                        onClick={deleteHandler}\n                                        data-value={user._id}\n                                    >\n                                        <i className=\"fas fa-trash\"></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    );\n};\n\nexport default UserListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader, { LoaderSmall } from \"../components/Loader\";\nimport { getUserDetails, updateUserByAdmin } from \"../actions/userActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { USER_UPDATE_BY_ADMIN_RESET } from \"../constants/userConstants\";\n\nconst UserEditScreen = ({ match, history }) => {\n    const userId = match.params.id;\n\n    const [name, setName] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const userDetails = useSelector((state) => state.userDetails);\n    const { loading, error, user } = userDetails;\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = useSelector((state) => state.userUpdateByAdmin);\n\n    // if there i sno user, get it from userid. dispatch puts found user in state.\n    // useEffect fires bcoz user is changed\n    // setName  etc., will then fill input fields with user info\n    useEffect(() => {\n        // if user update is successed then redirect to user list\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_BY_ADMIN_RESET });\n\n            history.push(\"/admin/userlist\");\n        } else {\n            if (!user.name) {\n                dispatch(getUserDetails(userId));\n            } else {\n                setName(user.name);\n                setEmail(user.email);\n                setIsAdmin(user.isAdmin);\n            }\n        }\n    }, [user, userId, successUpdate, history, dispatch]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(updateUserByAdmin({ _id: userId, name, email, isAdmin }));\n    };\n\n    return (\n        <>\n            <Link to=\"/admin/userlist\" className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Edit User</h1>\n                {error && <Message variant=\"warning\">{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"enter your name\"\n                            value={name}\n                            onChange={(e) => {\n                                setName(e.target.value);\n                            }}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            type=\"email\"\n                            placeholder=\"enter email\"\n                            value={email}\n                            onChange={(e) => {\n                                setEmail(e.target.value);\n                            }}\n                        ></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"isAdmin\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Check\n                            type=\"checkbox\"\n                            label=\"is admin?\"\n                            value={isAdmin}\n                            checked={isAdmin}\n                            onChange={(e) => {\n                                setIsAdmin(e.target.checked);\n                            }}\n                        ></Form.Check>\n                    </Form.Group>\n\n                    <Row>\n                        <Col>\n                            <Button type=\"submit\" variant=\"primary\">\n                                Update\n                            </Button>\n                        </Col>\n                        <Col>\n                            {errorUpdate && (\n                                <Message variant=\"warning\">\n                                    {errorUpdate}\n                                </Message>\n                            )}\n                            {loadingUpdate && <LoaderSmall />}\n                            {successUpdate && (\n                                <Message variant=\"good\">Update success</Message>\n                            )}\n                        </Col>\n                    </Row>\n                </Form>\n            </FormContainer>\n        </>\n    );\n};\n\nexport default UserEditScreen;\n","import React, { useState, useEffect } from \"react\";\n\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader, { LoaderSmall } from \"../components/Loader\";\n\nimport {\n    createProduct,\n    deleteProduct,\n    listProducts,\n} from \"../actions/productActions\";\nimport { Button, Col, Row, Table } from \"react-bootstrap\";\nimport { PRODUCT_CREATE_RESET } from \"../constants/productConstants\";\nimport { Paginate } from \"../components/Paginate\";\n\nconst ProductListScreen = ({ history, match }) => {\n    const pageNumber = match.params.pageNumber || 1;\n    const dispatch = useDispatch();\n    const productList = useSelector((state) => state.productList);\n    const { loading, error, products, pages, page } = productList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    const {\n        loading: loadingDelete,\n        error: errorDelete,\n        success: successDelete,\n    } = useSelector((state) => state.productDelete);\n    const {\n        loading: loadingCreate,\n        error: errorCreate,\n        success: successCreate,\n        product: createdProduct,\n    } = useSelector((state) => state.productCreate);\n\n    const deleteHandler = (id) => {\n        if (window.confirm(\"Are you Sure?\")) {\n            dispatch(deleteProduct(id));\n        }\n    };\n\n    const createHandler = () => {\n        // create product\n        dispatch(createProduct());\n    };\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET });\n\n        if (!userInfo.isAdmin) {\n            history.push(\"/login\");\n        }\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`);\n        } else {\n            dispatch(listProducts(\"\", pageNumber));\n        }\n    }, [\n        dispatch,\n        history,\n        userInfo,\n        successDelete,\n        successCreate,\n        createdProduct,\n        pageNumber,\n    ]);\n    return (\n        <>\n            <Row>\n                <Col md={9}>\n                    <h2>Products</h2>\n                </Col>\n                <Col>\n                    <Button className=\"my-3\" onClick={createHandler}>\n                        <i className=\"fas fa-plus\"></i>Create new product\n                    </Button>\n                </Col>\n            </Row>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant=\"warning\">{error}</Message>\n            ) : loadingDelete ? (\n                <LoaderSmall />\n            ) : errorDelete ? (\n                <Message variant=\"warning\">{errorDelete}</Message>\n            ) : loadingCreate ? (\n                <LoaderSmall />\n            ) : errorCreate ? (\n                <Message variant=\"warning\">{errorCreate}</Message>\n            ) : (\n                <>\n                    <Table\n                        striped\n                        responsive\n                        hover\n                        bordered\n                        className=\"table-sm\"\n                    >\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Price</th>\n                                <th>Category</th>\n                                <th>Brand</th>\n\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {products.map((product) => (\n                                <tr key={product._id}>\n                                    <td>{product._id}</td>\n                                    <td>{product.name}</td>\n                                    <td>{product.price}</td>\n                                    <td>{product.category}</td>\n                                    <td>{product.brand}</td>\n\n                                    <td>\n                                        <LinkContainer\n                                            to={`/admin/product/${product._id}/edit`}\n                                        >\n                                            <Button\n                                                variant=\"light\"\n                                                className=\"btn-sm\"\n                                            >\n                                                <i className=\"fas fa-edit\"></i>\n                                            </Button>\n                                        </LinkContainer>\n                                        <Button\n                                            variant=\"danger\"\n                                            className=\"btn-sm\"\n                                            onClick={() => {\n                                                deleteHandler(product._id);\n                                            }}\n                                        >\n                                            <i className=\"fas fa-trash\"></i>\n                                        </Button>\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                    <Paginate pages={pages} page={page} isAdmin={true} />\n                </>\n            )}\n        </>\n    );\n};\n\nexport default ProductListScreen;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader, { LoaderSmall } from \"../components/Loader\";\nimport { listProductDetails, updateProduct } from \"../actions/productActions\";\nimport FormContainer from \"../components/FormContainer\";\nimport { Button, Col, Form, Row } from \"react-bootstrap\";\nimport { upperFirst, lowerCase } from \"lodash\";\n\nconst ProductEditScreen = ({ match, history }) => {\n    const productId = match.params.id;\n\n    const fields = {\n        name: \"\",\n        price: 0,\n        brand: \"\",\n        category: \"\",\n        description: \"\",\n        image: \"\",\n        countInStock: 0,\n    };\n\n    const [productEditDetails, setProductEditDetails] = useState(fields);\n\n    const [uploading, setUploading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const { loading, error, product } = useSelector(\n        (state) => state.productDetails\n    );\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = useSelector((state) => state.productUpdate);\n\n    // if there i sno user, get it from userid. dispatch puts found user in state.\n    // useEffect fires bcoz user is changed\n    // setName  etc., will then fill input fields with user info\n    useEffect(() => {\n        if (!product.name || product._id !== productId) {\n            dispatch(listProductDetails(productId));\n        } else {\n            setProductEditDetails(product);\n        }\n    }, [product, productId, history, dispatch]);\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        dispatch(updateProduct(productEditDetails));\n    };\n\n    const changeHandler = async (e) => {\n        let valueToPut;\n        if (e.target.id === \"image-file\") {\n            // if file control is changed, upload file\n            const file = e.target.files[0];\n            const formData = new FormData();\n            formData.append(\"image\", file);\n            setUploading(true);\n\n            try {\n                const config = {\n                    headers: {\n                        \"Content-Type\": \"multipart/form-data\",\n                    },\n                };\n                const { data } = await axios.post(\n                    \"/api/upload\",\n                    formData,\n                    config\n                );\n\n                setUploading(false);\n                valueToPut = data;\n            } catch (error) {\n                console.log(error);\n                setUploading(false);\n            }\n        } else {\n            valueToPut = e.target.value;\n        }\n\n        setProductEditDetails({\n            ...productEditDetails,\n            [e.target.name]: valueToPut,\n        });\n    };\n    // if changed image-file upload control, upload the image, get path to it on the server,\n    // e.target.name is the same for file control and for text-field. so the \"image\" in the state will be updated whatever of two controls have changed\n\n    return (\n        <>\n            <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n            <FormContainer>\n                <h1>Edit Product</h1>\n                {error && <Message variant=\"warning\">{error}</Message>}\n                {loading && <Loader />}\n                <Form onSubmit={submitHandler}>\n                    {Object.keys(fields).map((fieldName) => {\n                        return (\n                            <Form.Group controlId={fieldName} key={fieldName}>\n                                <Form.Label>\n                                    {upperFirst(lowerCase(fieldName))}\n                                </Form.Label>\n                                <Form.Control\n                                    type={\n                                        fieldName === \"price\" ||\n                                        fieldName === \"countInStock\"\n                                            ? \"number\"\n                                            : \"text\"\n                                    }\n                                    as={\n                                        fieldName === \"description\"\n                                            ? \"textarea\"\n                                            : undefined\n                                    }\n                                    rows={\n                                        fieldName === \"description\"\n                                            ? 3\n                                            : undefined\n                                    }\n                                    placeholder={`enter ${upperFirst(\n                                        lowerCase(fieldName)\n                                    )}`}\n                                    value={productEditDetails[fieldName]}\n                                    name={fieldName}\n                                    onChange={changeHandler}\n                                ></Form.Control>\n                                {fieldName === \"image\" && (\n                                    <>\n                                        <Form.File\n                                            name=\"image\"\n                                            id=\"image-file\"\n                                            onChange={changeHandler}\n                                        ></Form.File>\n                                        {uploading && <Loader />}\n                                    </>\n                                )}\n                            </Form.Group>\n                        );\n                    })}\n\n                    <Row>\n                        <Col>\n                            <Button type=\"submit\" variant=\"primary\">\n                                Update\n                            </Button>\n                        </Col>\n                        <Col>\n                            {errorUpdate && (\n                                <Message variant=\"warning\">\n                                    {errorUpdate}\n                                </Message>\n                            )}\n                            {loadingUpdate && <LoaderSmall />}\n                            {successUpdate && (\n                                <Message variant=\"good\">Update success</Message>\n                            )}\n                        </Col>\n                    </Row>\n                </Form>\n            </FormContainer>\n        </>\n    );\n};\n\nexport default ProductEditScreen;\n","import React, { useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\nimport { listOrders } from \"../actions/orderActions\";\n\nimport { Button, Table } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nconst OrdersListScreen = ({ history }) => {\n    const dispatch = useDispatch();\n    const ordersList = useSelector((state) => state.ordersList);\n    const { loading, error, orders } = ordersList;\n\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        // only show this if user is Admin. if not, redirect to login page\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders());\n        } else {\n            history.push(\"/login\");\n        }\n    }, [dispatch, history, userInfo]); //success delete changes and list users is reloaded\n    return (\n        <>\n            <h2>Orders</h2>\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant=\"warning\">{error}</Message>\n            ) : (\n                <Table striped responsive hover bordered className=\"table-sm\">\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>User</th>\n\n                            <th>Total price</th>\n                            <th>Paid</th>\n                            <th>Delivered</th>\n                            <th>Details</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {orders.map((order) => (\n                            <tr key={order._id}>\n                                <td>{order._id}</td>\n                                <td>{order.user.name}</td>\n\n                                <td>{order.totalPrice}</td>\n                                <td>\n                                    {order.isPaid ? (\n                                        <>\n                                            <i\n                                                className=\"fas fa-check\"\n                                                style={{ color: \"green\" }}\n                                            />\n                                            <span>\n                                                {order.paidAt?.substring(0, 10)}\n                                            </span>\n                                        </>\n                                    ) : (\n                                        <i\n                                            className=\"fas fa-times\"\n                                            style={{ color: \"red\" }}\n                                        />\n                                    )}\n                                </td>\n                                <td>\n                                    {order.isDelivered ? (\n                                        <>\n                                            <i\n                                                className=\"fas fa-check\"\n                                                style={{ color: \"green\" }}\n                                            />\n                                            <p>\n                                                {order.deliveredAt?.substring(\n                                                    0,\n                                                    10\n                                                )}\n                                            </p>\n                                        </>\n                                    ) : (\n                                        <i\n                                            className=\"fas fa-times\"\n                                            style={{ color: \"red\" }}\n                                        />\n                                    )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/order/${order._id}`}>\n                                        <Button\n                                            variant=\"light\"\n                                            className=\"btn-sm\"\n                                        >\n                                            <i className=\"fas fa-info\"></i>\n                                        </Button>\n                                    </LinkContainer>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    );\n};\n\nexport default OrdersListScreen;\n","import React from \"react\";\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { Container } from \"react-bootstrap\";\nimport Homescreen from \"./screens/Homescreen\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport ProfileScreen from \"./screens/profileScreen\";\nimport ShippingScreen from \"./screens/ShippingScreen\";\nimport PaymentMethodScreen from \"./screens/PaymentMethodScreen\";\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\nimport OrderScreen from \"./screens/OrderScreen\";\nimport UserListScreen from \"./screens/UserListScreen\";\nimport UserEditScreen from \"./screens/UserEditScreen\";\nimport ProductListScreen from \"./screens/ProductListScreen\";\nimport ProductEditScreen from \"./screens/ProductEditScreen\";\nimport OrdersListScreen from \"./screens/OrdersListScreen\";\n\nconst App = () => {\n    return (\n        <Router>\n            <Header />\n            <main className=\"py-3\">\n                <Container>\n                    <Route path=\"/login\" component={LoginScreen} />\n                    <Route path=\"/register\" component={RegisterScreen} />\n                    <Route path=\"/product/:id\" component={ProductScreen} />\n                    <Route\n                        path=\"/admin/product/:id/edit\"\n                        component={ProductEditScreen}\n                    />\n                    <Route\n                        path=\"/admin/productlist\"\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path=\"/admin/productlist/:pageNumber\"\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path=\"/admin/orderlist\"\n                        component={OrdersListScreen}\n                    />\n                    <Route path=\"/cart/:id?\" component={CartScreen} />\n                    <Route path=\"/\" component={Homescreen} exact />\n                    <Route path=\"/profile\" component={ProfileScreen} />\n                    <Route path=\"/shipping\" component={ShippingScreen} />\n                    <Route path=\"/payment\" component={PaymentMethodScreen} />\n                    <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n                    <Route path=\"/order/:id\" component={OrderScreen} />\n                    <Route path=\"/admin/userlist\" component={UserListScreen} />\n                    <Route\n                        path=\"/admin/user/:id/edit\"\n                        component={UserEditScreen}\n                    />\n                    <Route\n                        path=\"/search/:keyword\"\n                        component={Homescreen}\n                        exact\n                    />\n                    <Route path=\"/page/:pageNumber\" component={Homescreen} />\n                    <Route\n                        path=\"/search/:keyword/page/:pageNumber\"\n                        component={Homescreen}\n                    />\n\n                    {/* \":id?\" id is optional */}\n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}